# Generated by Django 4.2.6 on 2023-11-20 07:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("fetch_data", "0005_coordsmap"),
    ]

    operations = [
        migrations.AlterField(
            model_name="satteliteimage",
            name="zoom",
            field=models.IntegerField(
                blank=True,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(50),
                ],
            ),
        ),
        migrations.CreateModel(
            name="QueuedTasks",
            fields=[
                (
                    "task_id",
                    models.CharField(max_length=128, primary_key=True, serialize=False),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("fetch", "fetch"),
                            ("infer", "inference"),
                            ("fetch_infer", "fetch_and_inference"),
                        ],
                        max_length=128,
                    ),
                ),
                (
                    "task_status",
                    models.CharField(
                        choices=[
                            ("fetching", "fetch_in_progress"),
                            ("fetched", "fetched"),
                            ("inferencing", "inference_in_progress"),
                            ("inferenced", "inferenced"),
                        ],
                        max_length=128,
                    ),
                ),
                ("fetch_progress", models.IntegerField(blank=True, null=True)),
                (
                    "lon_min",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                (
                    "lat_min",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "lon_max",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                (
                    "lat_max",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "zoom",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                (
                    "x_min",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(500000),
                        ],
                    ),
                ),
                (
                    "x_max",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(500000),
                        ],
                    ),
                ),
                (
                    "y_min",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(500000),
                        ],
                    ),
                ),
                (
                    "y_max",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(500000),
                        ],
                    ),
                ),
                ("time_from", models.DateField()),
                ("time_to", models.DateField()),
                ("time_queued", models.DateTimeField(auto_now_add=True)),
                ("task_description", models.CharField(max_length=256)),
                (
                    "area_tag",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="fetch_data.presetarea",
                    ),
                ),
                (
                    "user_queued",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
